<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       	http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans.xsd
       	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--spring整合mybatis-->
    <!--加载jdbc配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--1、将数据源对象的创建交由spring创建存到IOC容器-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--2、将sqlSessionFactory的创建权交给spring， 生产sqlsession-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--通过数据源构造sqlSessionFactory对象-->
        <property name="dataSource" ref="dataSource"></property>
        <!--给实体类的包起别名-->
        <property name="typeAliasesPackage" value="com.wyf.domain"></property>

        <!--配置mybatis分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                    <value>helperDialect=mysql</value>
                    </property>
                </bean>
            </array>
        </property>

        <!--加载mybatis核心配置文件-->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"></property>

    </bean>

    <!--3、将mapper代理对象交由spring创建：映射扫描配置扫描dao包下的所有接口生成代理对象存到IOC容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--生成哪些接口的代理对象呢？-->
        <property name="basePackage" value="com.wyf.dao"></property>
    </bean>


</beans>